[versions]
springBoot = "3.5.5"
springDependencyManagement = "1.1.7"
springSession = "3.5.0"
kotlin = "1.9.23"
querydsl = "5.1.0"

jooq = "3.18.7"
junit = "5.10.3"
assertj = "3.25.3"
mockito = "5.8.0"
testcontainers = "1.19.7"
lombok = "1.18.30"
mysql = "8.0.33"
jakartaPersistence = "3.1.0"
h2 = "2.2.224"
archunit = "1.3.0"
spotless = "6.25.0"
googleJavaFormat = "1.23.0"
jacoco = "0.8.12"
owaspDependencyCheck = "11.1.0"

[libraries]
# Spring Boot Starters
springBootStarter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "springBoot" }
springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springBoot" }
springBootStarterValidation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "springBoot" }
springBootStarterTest = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBoot" }

# Spring Data
springBootStarterDataJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "springBoot" }
springBootStarterDataRedis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "springBoot" }

# Spring Security
springBootStarterSecurity = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "springBoot" }
springBootStarterOauth2Client = { module = "org.springframework.boot:spring-boot-starter-oauth2-client", version.ref = "springBoot" }

# Spring Session
springSessionDataRedis = { module = "org.springframework.session:spring-session-data-redis", version.ref = "springSession" }

# Database & ORM

# Database & ORM
querydslJpa = { module = "com.querydsl:querydsl-jpa", version.ref = "querydsl" }
querydslApt = { module = "com.querydsl:querydsl-apt", version.ref = "querydsl" }
jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
mysqlConnectorJ = { module = "com.mysql:mysql-connector-j", version.ref = "mysql" }
jakartaPersistenceApi = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakartaPersistence" }
postgresql = { module = "org.postgresql:postgresql", version = "42.7.3" }

# Development Tools
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
h2Database = { module = "com.h2database:h2", version.ref = "h2" }

# Testing - JUnit Platform
junitBom = { module = "org.junit:junit-bom", version.ref = "junit" }
junitJupiterApi = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junitJupiterEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }

# Testing - Assertion & Mocking
assertjCore = { module = "org.assertj:assertj-core", version.ref = "assertj" }
mockitoCore = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockitoJunitJupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }

# Testing - Testcontainers
testcontainersBom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
testcontainersJunitJupiter = { module = "org.testcontainers:junit-jupiter" }
testcontainersRedis = { module = "org.testcontainers:redis" }

# Testing - Architecture
archunit = { module = "com.tngtech.archunit:archunit-junit5", version.ref = "archunit" }

# Build Tools
kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

[bundles]
# Spring Boot Web Stack
springBootWeb = ["springBootStarter", "springBootStarterWeb", "springBootStarterValidation"]

# Spring Data Stack
springData = ["springBootStarterDataJpa", "springBootStarterDataRedis"]

# Spring Security Stack
springSecurity = ["springBootStarterSecurity", "springBootStarterOauth2Client"]

# Redis & Session Management
redisSession = ["springBootStarterDataRedis", "springSessionDataRedis"]

# Database Essentials
databaseCore = ["mysqlConnectorJ", "jakartaPersistenceApi"]

# QueryDSL Tools
querydsl = ["querydslJpa", "querydslApt"]

# Testing - Core Platform
testingCore = ["junitJupiterApi", "junitJupiterEngine", "springBootStarterTest"]

# Testing - Assertion & Mocking
testingMocking = ["assertjCore", "mockitoCore", "mockitoJunitJupiter"]

# Testing - Integration & Containers
testingIntegration = ["testcontainersJunitJupiter", "testcontainersRedis"]

# Complete Testing Suite
testingFull = ["junitJupiterApi", "junitJupiterEngine", "springBootStarterTest", "assertjCore", "mockitoCore", "mockitoJunitJupiter", "testcontainersJunitJupiter"]

# Architecture Testing
archunit = ["archunit"]

[plugins]
springBoot = { id = "org.springframework.boot", version.ref = "springBoot" }
springDependencyManagement = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
jacoco = { id = "jacoco" }
owaspDependencyCheck = { id = "org.owasp.dependencycheck", version.ref = "owaspDependencyCheck" }