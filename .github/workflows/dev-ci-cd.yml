name: Development CI/CD

on:
  push:
    branches:
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/wonderwander

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Gradle build
        run: ./gradlew build --parallel --build-cache

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=dev-latest
            type=sha,prefix=dev-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-dev:
    needs: build-and-push
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: development
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Deploy to Development Server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          key: ${{ secrets.DEV_SSH_KEY }}
          port: ${{ secrets.DEV_PORT }}
          script: |
            docker pull ${{ needs.build-and-push.outputs.image_tag }}
            docker stop wonderwander-dev || true
            docker rm wonderwander-dev || true
            docker run -d \
              --name wonderwander-dev \
              --restart unless-stopped \
              -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=dev \
              ${{ needs.build-and-push.outputs.image_tag }}